{"ast":null,"code":"import _regeneratorRuntime from\"/Users/anastasiyauraleva/Desktop/MyMLHJourney/my-fellowship/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/anastasiyauraleva/Desktop/MyMLHJourney/my-fellowship/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/anastasiyauraleva/Desktop/MyMLHJourney/my-fellowship/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import socialMediaAuth from\"./service/auth\";import UserInfo from\"./data/GraphQL\";import{setContext}from\"@apollo/client/link/context\";import{useSetUser,useUser}from\"./context/userContext\";import{ApolloProvider,ApolloClient,gql,InMemoryCache,useQuery,createHttpLink}from\"@apollo/client\";import firebase from\"./configs/firebase-config\";import{useHistory}from\"react-router-dom\";import{ParentCard}from\"./cards/parentCard\";import BackgroundLogin from\"./cards/images/login-background.gif\";import\"./GithubAuthUI.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var githubProvider=new firebase.auth.GithubAuthProvider();function GithubAuthUI(){var history=useHistory();var user=useUser();var setUser=useSetUser();var httpLink=createHttpLink({uri:\"https://api.github.com/graphql\"});var authLink=setContext(function(_,_ref){var headers=_ref.headers;// get the authentication token from local storage if it exists\n// return the headers to the context so httpLink can read them\n// react hooks plz learn this\nreturn{headers:_objectSpread(_objectSpread({},headers),{},{authorization:user.userToken?\"Bearer \".concat(user.userToken):\"\"})};});var client=new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache()});var handleOnClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return socialMediaAuth(provider);case 2:res=_context.sent;console.log(res);setUser(function(){return res;});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleOnClick(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:user.userToken?/*#__PURE__*/_jsx(ParentCard,{}):/*#__PURE__*/_jsxs(\"div\",{className:\"github-auth\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"auth-section\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"main-title\",children:\"Github Authentication\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return handleOnClick(githubProvider);},children:[\" \",\"Sign in with Github\"]})]}),/*#__PURE__*/_jsx(\"img\",{className:\"github-background\",src:BackgroundLogin})]})});}export default GithubAuthUI;","map":{"version":3,"sources":["/Users/anastasiyauraleva/Desktop/MyMLHJourney/my-fellowship/src/GithubAuthUI.js"],"names":["React","socialMediaAuth","UserInfo","setContext","useSetUser","useUser","ApolloProvider","ApolloClient","gql","InMemoryCache","useQuery","createHttpLink","firebase","useHistory","ParentCard","BackgroundLogin","githubProvider","auth","GithubAuthProvider","GithubAuthUI","history","user","setUser","httpLink","uri","authLink","_","headers","authorization","userToken","client","link","concat","cache","handleOnClick","provider","res","console","log"],"mappings":"khBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gBAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,UAAT,CAAqBC,OAArB,KAAoC,uBAApC,CACA,OACEC,cADF,CAEEC,YAFF,CAGEC,GAHF,CAIEC,aAJF,CAKEC,QALF,CAMEC,cANF,KAOO,gBAPP,CAQA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,UAAT,KAA2B,oBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,qCAA5B,CACA,MAAO,oBAAP,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,GAAIJ,CAAAA,QAAQ,CAACK,IAAT,CAAcC,kBAAlB,EAAvB,CAEA,QAASC,CAAAA,YAAT,EAAwB,CACtB,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CACA,GAAMQ,CAAAA,IAAI,CAAGhB,OAAO,EAApB,CACA,GAAMiB,CAAAA,OAAO,CAAGlB,UAAU,EAA1B,CAEA,GAAMmB,CAAAA,QAAQ,CAAGZ,cAAc,CAAC,CAC9Ba,GAAG,CAAE,gCADyB,CAAD,CAA/B,CAIA,GAAMC,CAAAA,QAAQ,CAAGtB,UAAU,CAAC,SAACuB,CAAD,MAAoB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9C;AACA;AACA;AACA,MAAO,CACLA,OAAO,gCACFA,OADE,MAELC,aAAa,CAAEP,IAAI,CAACQ,SAAL,kBAA2BR,IAAI,CAACQ,SAAhC,EAA8C,EAFxD,EADF,CAAP,CAMD,CAV0B,CAA3B,CAYA,GAAMC,CAAAA,MAAM,CAAG,GAAIvB,CAAAA,YAAJ,CAAiB,CAC9BwB,IAAI,CAAEN,QAAQ,CAACO,MAAT,CAAgBT,QAAhB,CADwB,CAE9BU,KAAK,CAAE,GAAIxB,CAAAA,aAAJ,EAFuB,CAAjB,CAAf,CAKA,GAAMyB,CAAAA,aAAa,2FAAG,iBAAOC,QAAP,gJACFlC,CAAAA,eAAe,CAACkC,QAAD,CADb,QACdC,GADc,eAEpBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAd,OAAO,CAAC,iBAAMc,CAAAA,GAAN,EAAD,CAAP,CAHoB,sDAAH,kBAAbF,CAAAA,aAAa,6CAAnB,CAKA,mBACE,KAAC,cAAD,EAAgB,MAAM,CAAEJ,MAAxB,UACGT,IAAI,CAACQ,SAAL,cACC,KAAC,UAAD,IADD,cAGC,aAAK,SAAS,CAAC,aAAf,wBACE,iBAAS,SAAS,CAAC,cAAnB,wBACE,WAAI,SAAS,CAAC,YAAd,mCADF,cAEE,gBAAQ,OAAO,CAAE,yBAAMK,CAAAA,aAAa,CAAClB,cAAD,CAAnB,EAAjB,WACG,GADH,yBAFF,GADF,cASE,YAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAED,eAAxC,EATF,GAJJ,EADF,CAmBD,CAED,cAAeI,CAAAA,YAAf","sourcesContent":["import React from \"react\";\nimport socialMediaAuth from \"./service/auth\";\nimport UserInfo from \"./data/GraphQL\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { useSetUser, useUser } from \"./context/userContext\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  gql,\n  InMemoryCache,\n  useQuery,\n  createHttpLink,\n} from \"@apollo/client\";\nimport firebase from \"./configs/firebase-config\";\nimport { useHistory } from \"react-router-dom\";\nimport { ParentCard } from \"./cards/parentCard\";\nimport BackgroundLogin from \"./cards/images/login-background.gif\";\nimport \"./GithubAuthUI.css\";\n\nconst githubProvider = new firebase.auth.GithubAuthProvider();\n\nfunction GithubAuthUI() {\n  const history = useHistory();\n  const user = useUser();\n  const setUser = useSetUser();\n\n  const httpLink = createHttpLink({\n    uri: \"https://api.github.com/graphql\",\n  });\n\n  const authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    // return the headers to the context so httpLink can read them\n    // react hooks plz learn this\n    return {\n      headers: {\n        ...headers,\n        authorization: user.userToken ? `Bearer ${user.userToken}` : \"\",\n      },\n    };\n  });\n\n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n\n  const handleOnClick = async (provider) => {\n    const res = await socialMediaAuth(provider);\n    console.log(res);\n    setUser(() => res);\n  };\n  return (\n    <ApolloProvider client={client}>\n      {user.userToken ? (\n        <ParentCard />\n      ) : (\n        <div className=\"github-auth\">\n          <section className=\"auth-section\">\n            <h1 className=\"main-title\">Github Authentication</h1>\n            <button onClick={() => handleOnClick(githubProvider)}>\n              {\" \"}\n              Sign in with Github\n            </button>\n          </section>\n\n          <img className=\"github-background\" src={BackgroundLogin} />\n        </div>\n      )}\n    </ApolloProvider>\n  );\n}\n\nexport default GithubAuthUI;\n"]},"metadata":{},"sourceType":"module"}