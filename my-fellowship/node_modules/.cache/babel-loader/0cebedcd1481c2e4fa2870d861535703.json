{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/anastasiyauraleva/Desktop/MyMLHJourney/my-fellowship/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import{gql}from\"apollo-boost\";//here we are doing apollo boost - this query will have these params\n// if we have more params, we put them in query , and use it in where ever u need it\nexport var GET_ALL_USER_INFO=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query($username: String!) {\\n    user(login: $username) {\\n      name\\n      login\\n      avatarUrl\\n      id\\n      email\\n      location\\n      url\\n      websiteUrl\\n      company\\n      issues {\\n        totalCount\\n      }\\n      pullRequests {\\n        totalCount\\n      }\\n      issueComments {\\n        totalCount\\n      }\\n      commitComments {\\n        totalCount\\n      }\\n    }\\n  }\\n\"])));export var GET_CONTRIBUTION_INFO=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  query($query: String!) {\\n    search(query: $query, type: ISSUE, last: 100) {\\n      edges {\\n        node {\\n          ... on PullRequest {\\n            url\\n            createdAt\\n            additions\\n            deletions\\n            headRepository {\\n              name\\n              stargazers {\\n                totalCount\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"])));export var GET_MLH_INFO=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n<<<<<<< HEAD\\n  query($username: String!) {\\n    organization(login: \\\"MLH-Fellowship\\\") {\\n      teams(first: 100, userLogins: [$username]) {\\n=======\\n  query ($username: String!) {\\n    organization(login: \\\"MLH-Fellowship\\\") {\\n      teams(first: 100, userLogins: [\\\"\\\"username]) {\\n>>>>>>>  changed cards, added parentCard, error and loading animations (#26)\\n        edges {\\n          node {\\n            name\\n            members {\\n              totalCount\\n              nodes {\\n                name\\n                login\\n                avatarUrl\\n                email\\n                location\\n                url\\n              }\\n            }\\n            repositories {\\n              totalCount\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/Users/anastasiyauraleva/Desktop/MyMLHJourney/my-fellowship/src/data/GraphQL.js"],"names":["gql","GET_ALL_USER_INFO","GET_CONTRIBUTION_INFO","GET_MLH_INFO"],"mappings":"wPAAA,OAASA,GAAT,KAAoB,cAApB,CAEA;AACA;AACA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGD,GAAH,kdAAvB,CA4BP,MAAO,IAAME,CAAAA,qBAAqB,CAAGF,GAAH,keAA3B,CAuBP,MAAO,IAAMG,CAAAA,YAAY,CAAGH,GAAH,+0BAAlB","sourcesContent":["import { gql } from \"apollo-boost\";\n\n//here we are doing apollo boost - this query will have these params\n// if we have more params, we put them in query , and use it in where ever u need it\nexport const GET_ALL_USER_INFO = gql`\n  query($username: String!) {\n    user(login: $username) {\n      name\n      login\n      avatarUrl\n      id\n      email\n      location\n      url\n      websiteUrl\n      company\n      issues {\n        totalCount\n      }\n      pullRequests {\n        totalCount\n      }\n      issueComments {\n        totalCount\n      }\n      commitComments {\n        totalCount\n      }\n    }\n  }\n`;\n\nexport const GET_CONTRIBUTION_INFO = gql`\n  query($query: String!) {\n    search(query: $query, type: ISSUE, last: 100) {\n      edges {\n        node {\n          ... on PullRequest {\n            url\n            createdAt\n            additions\n            deletions\n            headRepository {\n              name\n              stargazers {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_MLH_INFO = gql`\n<<<<<<< HEAD\n  query($username: String!) {\n    organization(login: \"MLH-Fellowship\") {\n      teams(first: 100, userLogins: [$username]) {\n=======\n  query ($username: String!) {\n    organization(login: \"MLH-Fellowship\") {\n      teams(first: 100, userLogins: [\"\"username]) {\n>>>>>>>  changed cards, added parentCard, error and loading animations (#26)\n        edges {\n          node {\n            name\n            members {\n              totalCount\n              nodes {\n                name\n                login\n                avatarUrl\n                email\n                location\n                url\n              }\n            }\n            repositories {\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}